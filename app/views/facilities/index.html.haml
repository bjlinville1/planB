= hidden_field_tag 'facilities_list', @hash.to_json
#map

%div.markers_list{style: "background-color:rgb(239,239,239)"}
  %br
  = form_tag facilities_path, :method => :get do
    ="Search: "
    = text_field_tag :search, params[:search], :required => true, class: "home-initial-search_form", style:"border-radius:5px; width:50%;"
    %br
    %br

    / Start here: Make your filters change the data you send to the map, then reload the page. This is a terrible long-term solution, but will work for now.
    /long term solution for filters is here: http://stackoverflow.com/questions/33820419/how-to-filter-google-map-marker-using-dropdown-value-in-angularjs and if i had time to stick in angular, I'd do it now.  
    -@haz_types = ["hazardous", "non-haz", "liquids"]
    / material type should really be checkboxes
    - x=1
    = "Material type:"
    - @haz_types.each do |type|
      = check_box_tag 'type_ids[]', x
      = h "#{type}"
      - x+=1
    / = select_tag :material_type, options_for_select(@haz_types), style: "width:68%;"
    %br
    %br
    ="Waste type:"
    = select_tag :waste_types_accepted, options_for_select(@waste_types), style: "width:71%;"
    %br
    %br
    ="Facility type:"
    = select_tag :facility_types, options_for_select(@facility_types), style: "width:70%;"
    %br
    %br
    -if user_signed_in?
      -if current_user.account_status == "registered_user"        
        ="Filter by approved vendors:"
        = select_tag :vendor_list_company, options_for_select(["None","Goodyear", "First Energy", "Cleveland Clinic"]), style: "width:50%;"
        %br
        %br

    = submit_tag "Apply Filters", :name => nil, class: "search_submit_button btn btn-md btn-primary centered_div", style: "margin-left: auto !important; margin-right: auto !important;"
    %br
  #sidebar_container

%script{:src => "//maps.google.com/maps/api/js?v=3.18&sensor=false&client=&key=&libraries=geometry&language=&hl=Â®ion="}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js", :type => "text/javascript"}
/ only if you need custom infoboxes